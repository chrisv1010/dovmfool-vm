.class public Program {
	.handler public Main(sys) {
		.entrypoint
		.locals { ts, console, i, count }
		
		load-argument sys
		push-literal "get-console:0"
		send-message
		store-local console

		push-literal 0
		store-local i
		push-literal 13
		store-local count
		load-argument sys
		load-local count
		push-literal "new-array:1"
		send-message
		store-local ts
		
		start:
			load-local i
			load-local count
			push-literal "equals:1"
			send-message
			jump-if-true join
		
			load-local ts
			load-local i
			push-literal "Program.Foo"
			new-instance

			dup
			load-local console
			load-local i
			push-literal "initialize:2"
			send-message

			dup
			push-literal "start:0"
			send-message

			push-literal "set:2"
			send-message

			load-local i
			push-literal 1
			push-literal "add:1"
			send-message
			store-local i
			jump start

		join:
			load-local ts
			push-literal 0
			push-literal "get:1"
			send-message
			push-literal "join:0"
			send-message				
	}

	.class public Foo extends System.Threading.Thread {
		.fields { threading, console, index }

		.handler public initialize(console, index) {
			load-argument console
			store-field console
			load-argument index
			store-field index
			
			push-literal "System.Threading"
			new-instance
			store-field threading
		}

		.handler public run() {
			start:
				load-field console
				push-literal "Hello World! "
				load-field index
				push-literal 13
				push-literal "modulo:1"
				send-message
				push-literal 1
				push-literal "substring:2"
				send-message
				push-literal "write:1"
				send-message
				
				load-field threading
				push-literal 100
				push-literal "sleep:1"
				send-message
				
				jump start
		}	       
	}
}