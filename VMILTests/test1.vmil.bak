.class public Foo {
       .fields { console, bar2, initialized }
       
       .default {
       		.locals { args }

		load-field initialized
		jump-if-true alreadyInitialized

		store-local args
		load-local args
      		push-literal "length:0"
      		send-message
      		push-literal 2
      		push-literal "equals:1"
      		send-message
      		jump-if-false invalidArgCount

      		load-local args
      		push-literal 0
      		push-literal "get:1"
      		send-message
      		store-field console

      		load-local args
      		push-literal 1
      		push-literal "get:1"
      		send-message
      		store-field bar2

      		push-literal 1
      		store-field initialized
      		return-void

	    invalidArgCount: 
		push-literal "System.ArgumentOutOfRangeException"
		new-instance
        	dup
      		push-literal "The expected number of arguments was two."
      		push-literal "initialize:1"
      		send-message
      		throw

    	    alreadyInitialized: 
     		push-literal "System.InvalidOperationException"
      		new-instance
      		dup
      		push-literal "The object has already been initialized"
      		push-literal "initialize:1"
      		send-message
      		throw
  	}

	.handler public WriteHelloWorld(sys) {
  		 .entrypoint
		 .locals { e }
	   	 load-this
           	 load-argument sys
	   	 push-literal "get-console:0"
	   	 send-message
           	 push-literal "Hello World!"
           	 push-literal "init:2"
           	 send-message

	   	 load-field console
	   	 load-field bar2
	   	 push-literal "write-line:1"
	   	 send-message

		 .try {
	 		load-this
	 		push-literal "init:0"
			send-message
		} catch {
		  	store-local e
			load-argument sys
			push-literal "get-console:0"
			send-message
			load-local e
			push-literal "get-type:0"
			send-message
			push-literal "name:0"
			send-message
			push-literal ": "
			push-literal "concat:1"
			send-message
			push-literal "write:1"
			send-message
			load-argument sys
			push-literal "get-console:0"
			send-message
			load-local e
		  	push-literal "message:0"
			send-message
			push-literal "write-line:1"
			send-message
		}

		.try {
			push-literal "Object"
			new-instance
			push-literal "bobHope:0"
			send-message
		} catch {
		  	store-local e
			load-argument sys
			push-literal "get-console:0"
			send-message
			load-local e
			push-literal "get-type:0"
			send-message
			push-literal "name:0"
			send-message
			push-literal ": "
			push-literal "concat:1"
			send-message
			push-literal "write:1"
			send-message
			load-argument sys
			push-literal "get-console:0"
			send-message
			load-local e
		  	push-literal "message:0"
			send-message
			push-literal "write-line:1"
			send-message
		}
	}
}
