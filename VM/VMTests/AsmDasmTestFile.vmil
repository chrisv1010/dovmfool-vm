.class public Foo extends Foo1, Foo2  {
  .fields { field_0, field_1, field_2 }
  
  .default {
      .locals { local_0 }
      
      load-field field_2
      jump-if-true label44
      store-local local_0
      load-local local_0
      push-literal "argument-count:0"
      send-message
      push-literal 2
      push-literal "are-equal:1"
      send-message
      jump-if-false label30
      load-local local_0
      push-literal 0
      push-literal "get-argument:1"
      send-message
      store-field field_0
      load-local local_0
      push-literal 1
      push-literal "get-argument:1"
      send-message
      store-field field_1
      push-literal 1
      store-field field_2
      return-void
      push-literal 10
      push-literal "Bob er sej"
      push-literal -10
      push-literal 1073741824
      push-literal -1073741824
      push-literal 2147483647
      push-literal -2147483648
    label30: 
      .try {
        push-literal "System.ArgumentOutOfRange"
        new-instance
        dup
        push-literal "The expected number of arguments was two"
        push-literal "initialize:1"
        send-message
        throw
      } catch {
        load-field field_0
        push-literal "jsdlkfjl"
        push-literal "write-line:1"
        send-message
      }
    label44: 
      push-literal "System.InvalidOperationException"
      new-instance
      dup
      push-literal "The object has already been initialized"
      push-literal "initialize:1"
      send-message
      throw
  }
  
  .class public InnerClass extends Foo  {
    .handler public WriteHelloWorld(argument_0) {
        load-local argument_0
        push-literal "Hello World!"
        push-literal "write-line:1"
        send-message
    }
  }
}
